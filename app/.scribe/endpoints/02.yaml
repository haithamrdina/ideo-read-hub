name: '3-Tenant Service'
description: 'APIs for managing tenants'
endpoints:
  -
    httpMethods:
      - GET
    uri: master/manage/v1/tenant
    metadata:
      groupName: '3-Tenant Service'
      groupDescription: 'APIs for managing tenants'
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieves the list of tenants'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 400
          }
        headers: []
        description: 'General Error'
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 401
          }
        headers: []
        description: 'Your request was made with invalid credentials.'
        custom: []
      -
        status: 401
        content: '{"success":false,"name":"Unauthorized","message":["Unauthenticated."],"status":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 403
          }
        headers: []
        description: 'Permission denied'
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 404
          }
        headers: []
        description: 'Data not found'
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 500
          }
        headers: []
        description: 'Internal server error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: master/manage/v1/tenant
    metadata:
      groupName: '3-Tenant Service'
      groupDescription: 'APIs for managing tenants'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create new tenant'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company:
        name: company
        description: 'The company name.'
        required: true
        example: 'Ideo Factory'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider:
        name: provider
        description: 'The learning management system provider.'
        required: true
        example: docebo
        type: string
        enumValues:
          - docebo
          - forma
          - moodle
        exampleWasSpecified: false
        custom: []
      provider_settings:
        name: provider_settings
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_settings.endpoint:
        name: provider_settings.endpoint
        description: ''
        required: true
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_settings.username:
        name: provider_settings.username
        description: ''
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_settings.password:
        name: provider_settings.password
        description: ''
        required: true
        example: 'ky^mHydT&:/`Hf|'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      subfolder:
        name: subfolder
        description: 'The path identification.'
        required: true
        example: ideo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      favicon:
        name: favicon
        description: 'The favicon of the company. Must not be greater than 2048 characters.'
        required: false
        example: uianmxthbdwcusadxclch
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'The logo of the company. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      banner:
        name: banner
        description: 'The banner of the company. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      theme:
        name: theme
        description: 'The stylesheet  of the company.'
        required: false
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      company: 'Ideo Factory'
      provider: docebo
      provider_settings:
        endpoint: voluptate
        username: laudantium
        password: 'ky^mHydT&:/`Hf|'
      subfolder: ideo
      favicon: uianmxthbdwcusadxclch
      theme: est
    fileParameters:
      logo: null
      banner: null
    responses:
      -
        status: 400
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 400
          }
        headers: []
        description: 'General Error'
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 401
          }
        headers: []
        description: 'Your request was made with invalid credentials.'
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 403
          }
        headers: []
        description: 'Permission denied'
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 404
          }
        headers: []
        description: 'Data not found'
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 500
          }
        headers: []
        description: 'Internal server error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'master/manage/v1/tenant/{tenant_id}'
    metadata:
      groupName: '3-Tenant Service'
      groupDescription: 'APIs for managing tenants'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a selected tenant'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tenant_id:
        name: tenant_id
        description: 'Internal tenant ID'
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tenant_id: velit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 400
          }
        headers: []
        description: 'General Error'
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 401
          }
        headers: []
        description: 'Your request was made with invalid credentials.'
        custom: []
      -
        status: 401
        content: '{"success":false,"name":"Unauthorized","message":["Unauthenticated."],"status":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 403
          }
        headers: []
        description: 'Permission denied'
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 404
          }
        headers: []
        description: 'Data not found'
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 500
          }
        headers: []
        description: 'Internal server error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'master/manage/v1/tenant/{tenant_id}'
    metadata:
      groupName: '3-Tenant Service'
      groupDescription: 'APIs for managing tenants'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update selected tenant'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      tenant_id:
        name: tenant_id
        description: 'Internal tenant ID'
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tenant_id: ea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      favicon:
        name: favicon
        description: 'The favicon of the company. Must not be greater than 2048 characters.'
        required: false
        example: alewwvlaqulhcspgrouytrq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'The logo of the company. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      banner:
        name: banner
        description: 'The banner of the company. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      theme:
        name: theme
        description: 'The stylesheet  of the company.'
        required: false
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      favicon: alewwvlaqulhcspgrouytrq
      theme: rerum
    fileParameters:
      logo: null
      banner: null
    responses:
      -
        status: 400
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 400
          }
        headers: []
        description: 'General Error'
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 401
          }
        headers: []
        description: 'Your request was made with invalid credentials.'
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 403
          }
        headers: []
        description: 'Permission denied'
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 404
          }
        headers: []
        description: 'Data not found'
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 500
          }
        headers: []
        description: 'Internal server error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'master/manage/v1/tenant/{tenant_id}'
    metadata:
      groupName: '3-Tenant Service'
      groupDescription: 'APIs for managing tenants'
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete selected tenant'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tenant_id:
        name: tenant_id
        description: 'Internal tenant ID'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tenant_id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 400
          }
        headers: []
        description: 'General Error'
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 401
          }
        headers: []
        description: 'Your request was made with invalid credentials.'
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 403
          }
        headers: []
        description: 'Permission denied'
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 404
          }
        headers: []
        description: 'Data not found'
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "name": "string",
              "message": [
                  "string"
              ],
              "status": 500
          }
        headers: []
        description: 'Internal server error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
